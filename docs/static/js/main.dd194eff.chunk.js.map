{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","titulo","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBa,SAAEP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAMA,EAAN,OCDCO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,ECFd,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAW,WAEXxB,EAASC,GACRwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAId,CAAEpB,IAEEqB,EDf2BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGtB,OAFAO,QAAQC,IAAIR,GAGR,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KAEEoB,GAAW,uBAAGJ,UAAU,yCAAb,cAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACAmB,IAAMnB,EAAIC,IACLD,UEgBVoB,EAhCM,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAAc,EAEC7C,mBAAS,CAAC,cAFX,mBAE5B8C,EAF4B,KAEhB/C,EAFgB,KAInC,OACI,oCACI,gCAAO8C,GAEP,kBAAC,EAAD,CAAa9C,cAAgBA,IAE7B,6BAEA,4BAEQ+C,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA6B,IAAM7B,EACNA,SAAWA,U,MChBnCiC,IAASC,OAEL,kBAAC,EAAD,CAAcH,OAAS,iBACzBI,SAASC,eAAe,U","file":"static/js/main.dd194eff.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValue = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats] );\r\n            setInputValue('');\r\n        } \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input  \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputValue }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=I7P9B4EZrkNFYd2z0ljGuWhNtpWyTB36`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={url} alt={title} />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const  { data:images, loading } = useFetchGifs( category );\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>    \r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>  \r\n\r\n            { loading && <p className=\"animate__animated animate__fadeInLeft\">Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                { \r\n                    images.map( img  => (\r\n                    <GifGridItem \r\n                    key={ img.id }\r\n                    { ...img } />      \r\n                    )) \r\n                }\r\n                \r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n    getGifs( category )\r\n    .then( imgs => {\r\n           \r\n        setState({\r\n            data: imgs,\r\n            loading: false\r\n        });            \r\n    })\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ( { titulo } ) => {\r\n\r\n    const [categories, setCategories] = useState(['Overwatch']);\r\n\r\n    return (\r\n        <>\r\n            <h2> { titulo }</h2> \r\n           \r\n            <AddCategory setCategories={ setCategories }/>\r\n           \r\n            <hr /> \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n    titulo: PropTypes.string\r\n}\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp titulo = 'GifExpertApp' />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}